//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Rasmus/OneDrive/Aalborg University/4 Semester/Project/P4-project/OG/OG\OG.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IOGListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class OGBaseListener : IOGListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>prog</c>
	/// labeled alternative in <see cref="OGParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] OGParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>prog</c>
	/// labeled alternative in <see cref="OGParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] OGParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>shapeDclsChildren</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShapeDclsChildren([NotNull] OGParser.ShapeDclsChildrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>shapeDclsChildren</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShapeDclsChildren([NotNull] OGParser.ShapeDclsChildrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>shapeDclEmpty</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShapeDclEmpty([NotNull] OGParser.ShapeDclEmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>shapeDclEmpty</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShapeDclEmpty([NotNull] OGParser.ShapeDclEmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallChildren</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallChildren([NotNull] OGParser.FunctionCallChildrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallChildren</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallChildren([NotNull] OGParser.FunctionCallChildrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallEmpty</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallEmpty([NotNull] OGParser.FunctionCallEmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallEmpty</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallEmpty([NotNull] OGParser.FunctionCallEmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.machineVariables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMachineVariables([NotNull] OGParser.MachineVariablesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.machineVariables"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMachineVariables([NotNull] OGParser.MachineVariablesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.machine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMachine([NotNull] OGParser.MachineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.machine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMachine([NotNull] OGParser.MachineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.draw"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDraw([NotNull] OGParser.DrawContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.draw"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDraw([NotNull] OGParser.DrawContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>drawCommandsChildren</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrawCommandsChildren([NotNull] OGParser.DrawCommandsChildrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>drawCommandsChildren</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrawCommandsChildren([NotNull] OGParser.DrawCommandsChildrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>drawCommandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrawCommandsEmpty([NotNull] OGParser.DrawCommandsEmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>drawCommandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrawCommandsEmpty([NotNull] OGParser.DrawCommandsEmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.shapeDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShapeDcl([NotNull] OGParser.ShapeDclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.shapeDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShapeDcl([NotNull] OGParser.ShapeDclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBody([NotNull] OGParser.BodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBody([NotNull] OGParser.BodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentsChildren</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentsChildren([NotNull] OGParser.AssignmentsChildrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentsChildren</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentsChildren([NotNull] OGParser.AssignmentsChildrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentsEmpty</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentsEmpty([NotNull] OGParser.AssignmentsEmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentsEmpty</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentsEmpty([NotNull] OGParser.AssignmentsEmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declarationsChildren</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationsChildren([NotNull] OGParser.DeclarationsChildrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationsChildren</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationsChildren([NotNull] OGParser.DeclarationsChildrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declarationsEmpty</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationsEmpty([NotNull] OGParser.DeclarationsEmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationsEmpty</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationsEmpty([NotNull] OGParser.DeclarationsEmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>commandsChildren</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommandsChildren([NotNull] OGParser.CommandsChildrenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>commandsChildren</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommandsChildren([NotNull] OGParser.CommandsChildrenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>commandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommandsEmpty([NotNull] OGParser.CommandsEmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>commandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommandsEmpty([NotNull] OGParser.CommandsEmptyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numberDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberDcl([NotNull] OGParser.NumberDclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberDcl([NotNull] OGParser.NumberDclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointDcl([NotNull] OGParser.PointDclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointDcl([NotNull] OGParser.PointDclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolDcl([NotNull] OGParser.BoolDclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolDcl([NotNull] OGParser.BoolDclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.booleanDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanDeclaration([NotNull] OGParser.BooleanDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.booleanDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanDeclaration([NotNull] OGParser.BooleanDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberDeclaration([NotNull] OGParser.NumberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberDeclaration([NotNull] OGParser.NumberDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDclPointRefAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointDclPointRefAssign([NotNull] OGParser.PointDclPointRefAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDclPointRefAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointDclPointRefAssign([NotNull] OGParser.PointDclPointRefAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDclIdAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointDclIdAssign([NotNull] OGParser.PointDclIdAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDclIdAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointDclIdAssign([NotNull] OGParser.PointDclIdAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.pointReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointReference([NotNull] OGParser.PointReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.pointReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointReference([NotNull] OGParser.PointReferenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberTuple([NotNull] OGParser.NumberTupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberTuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberTuple([NotNull] OGParser.NumberTupleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] OGParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] OGParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.propertyAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyAssignment([NotNull] OGParser.PropertyAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.propertyAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyAssignment([NotNull] OGParser.PropertyAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdAssign([NotNull] OGParser.IdAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdAssign([NotNull] OGParser.IdAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolAssign([NotNull] OGParser.BoolAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolAssign([NotNull] OGParser.BoolAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numberAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberAssign([NotNull] OGParser.NumberAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numberAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberAssign([NotNull] OGParser.NumberAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>pointAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointAssign([NotNull] OGParser.PointAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>pointAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointAssign([NotNull] OGParser.PointAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.pointAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPointAssignment([NotNull] OGParser.PointAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.pointAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPointAssignment([NotNull] OGParser.PointAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.startPointAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartPointAssignment([NotNull] OGParser.StartPointAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.startPointAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartPointAssignment([NotNull] OGParser.StartPointAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.endPointAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndPointAssignment([NotNull] OGParser.EndPointAssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.endPointAssignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndPointAssignment([NotNull] OGParser.EndPointAssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] OGParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] OGParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>infixAdditionExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixAdditionExpr([NotNull] OGParser.InfixAdditionExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>infixAdditionExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixAdditionExpr([NotNull] OGParser.InfixAdditionExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>singleTermExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleTermExpr([NotNull] OGParser.SingleTermExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>singleTermExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleTermExpr([NotNull] OGParser.SingleTermExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>infixMultExpr</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixMultExpr([NotNull] OGParser.InfixMultExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>infixMultExpr</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixMultExpr([NotNull] OGParser.InfixMultExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>singleTermChild</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleTermChild([NotNull] OGParser.SingleTermChildContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>singleTermChild</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleTermChild([NotNull] OGParser.SingleTermChildContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor([NotNull] OGParser.FactorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.factor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor([NotNull] OGParser.FactorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] OGParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] OGParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprID</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExprID([NotNull] OGParser.BoolExprIDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprID</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExprID([NotNull] OGParser.BoolExprIDContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprBoolComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExprBoolComp([NotNull] OGParser.BoolExprBoolCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprBoolComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExprBoolComp([NotNull] OGParser.BoolExprBoolCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprMathComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExprMathComp([NotNull] OGParser.BoolExprMathCompContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprMathComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExprMathComp([NotNull] OGParser.BoolExprMathCompContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprNotPrefix</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExprNotPrefix([NotNull] OGParser.BoolExprNotPrefixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprNotPrefix</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExprNotPrefix([NotNull] OGParser.BoolExprNotPrefixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprTrueFalse</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExprTrueFalse([NotNull] OGParser.BoolExprTrueFalseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprTrueFalse</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExprTrueFalse([NotNull] OGParser.BoolExprTrueFalseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprFuncCall</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExprFuncCall([NotNull] OGParser.BoolExprFuncCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprFuncCall</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExprFuncCall([NotNull] OGParser.BoolExprFuncCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommand([NotNull] OGParser.CommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.command"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommand([NotNull] OGParser.CommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.movementCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMovementCommand([NotNull] OGParser.MovementCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.movementCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMovementCommand([NotNull] OGParser.MovementCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.lineCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineCommand([NotNull] OGParser.LineCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.lineCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineCommand([NotNull] OGParser.LineCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.curveCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCurveCommand([NotNull] OGParser.CurveCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.curveCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCurveCommand([NotNull] OGParser.CurveCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.toCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterToCommand([NotNull] OGParser.ToCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.toCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitToCommand([NotNull] OGParser.ToCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.drawCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrawCommand([NotNull] OGParser.DrawCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.drawCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrawCommand([NotNull] OGParser.DrawCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.fromCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFromCommand([NotNull] OGParser.FromCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.fromCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFromCommand([NotNull] OGParser.FromCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.iterationCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIterationCommand([NotNull] OGParser.IterationCommandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.iterationCommand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIterationCommand([NotNull] OGParser.IterationCommandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberIteration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberIteration([NotNull] OGParser.NumberIterationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberIteration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberIteration([NotNull] OGParser.NumberIterationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.untilIteration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntilIteration([NotNull] OGParser.UntilIterationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.untilIteration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntilIteration([NotNull] OGParser.UntilIterationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.functionDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDcl([NotNull] OGParser.FunctionDclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.functionDcl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDcl([NotNull] OGParser.FunctionDclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.returnFunctionDCL"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnFunctionDCL([NotNull] OGParser.ReturnFunctionDCLContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.returnFunctionDCL"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnFunctionDCL([NotNull] OGParser.ReturnFunctionDCLContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.typeWord"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeWord([NotNull] OGParser.TypeWordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.typeWord"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeWord([NotNull] OGParser.TypeWordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.voidFunctionDCL"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVoidFunctionDCL([NotNull] OGParser.VoidFunctionDCLContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.voidFunctionDCL"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVoidFunctionDCL([NotNull] OGParser.VoidFunctionDCLContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.parameterDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterDeclarations([NotNull] OGParser.ParameterDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.parameterDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterDeclarations([NotNull] OGParser.ParameterDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] OGParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] OGParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] OGParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] OGParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] OGParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] OGParser.ParameterListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] OGParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] OGParser.ReturnStatementContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
