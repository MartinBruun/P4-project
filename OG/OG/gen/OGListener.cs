//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Martin/projects/P4/P4-project/OG/OG\OG.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="OGParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IOGListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>prog</c>
	/// labeled alternative in <see cref="OGParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] OGParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>prog</c>
	/// labeled alternative in <see cref="OGParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] OGParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.machineSettings"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMachineSettings([NotNull] OGParser.MachineSettingsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.machineSettings"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMachineSettings([NotNull] OGParser.MachineSettingsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.machineMods"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMachineMods([NotNull] OGParser.MachineModsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.machineMods"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMachineMods([NotNull] OGParser.MachineModsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.workAreaMod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWorkAreaMod([NotNull] OGParser.WorkAreaModContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.workAreaMod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWorkAreaMod([NotNull] OGParser.WorkAreaModContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.workAreaModPrpts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWorkAreaModPrpts([NotNull] OGParser.WorkAreaModPrptsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.workAreaModPrpts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWorkAreaModPrpts([NotNull] OGParser.WorkAreaModPrptsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.sizePrpt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSizePrpt([NotNull] OGParser.SizePrptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.sizePrpt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSizePrpt([NotNull] OGParser.SizePrptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.workAreaVars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWorkAreaVars([NotNull] OGParser.WorkAreaVarsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.workAreaVars"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWorkAreaVars([NotNull] OGParser.WorkAreaVarsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.shapeDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShapeDcls([NotNull] OGParser.ShapeDclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.shapeDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShapeDcls([NotNull] OGParser.ShapeDclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.functionDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDcls([NotNull] OGParser.FunctionDclsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.functionDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDcls([NotNull] OGParser.FunctionDclsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.draw"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDraw([NotNull] OGParser.DrawContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.draw"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDraw([NotNull] OGParser.DrawContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.drawCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawCommands([NotNull] OGParser.DrawCommandsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.drawCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawCommands([NotNull] OGParser.DrawCommandsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>drawCmd</c>
	/// labeled alternative in <see cref="OGParser.drawCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawCmd([NotNull] OGParser.DrawCmdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>drawCmd</c>
	/// labeled alternative in <see cref="OGParser.drawCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawCmd([NotNull] OGParser.DrawCmdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>drawFromCmd</c>
	/// labeled alternative in <see cref="OGParser.drawCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawFromCmd([NotNull] OGParser.DrawFromCmdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>drawFromCmd</c>
	/// labeled alternative in <see cref="OGParser.drawCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawFromCmd([NotNull] OGParser.DrawFromCmdContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.shapeDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShapeDcl([NotNull] OGParser.ShapeDclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.shapeDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShapeDcl([NotNull] OGParser.ShapeDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] OGParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] OGParser.BodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmts([NotNull] OGParser.StmtsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.stmts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmts([NotNull] OGParser.StmtsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] OGParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] OGParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assgnments</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssgnments([NotNull] OGParser.AssgnmentsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assgnments</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssgnments([NotNull] OGParser.AssgnmentsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>noAssignmentsDefined</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoAssignmentsDefined([NotNull] OGParser.NoAssignmentsDefinedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>noAssignmentsDefined</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoAssignmentsDefined([NotNull] OGParser.NoAssignmentsDefinedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>dcls</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDcls([NotNull] OGParser.DclsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>dcls</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDcls([NotNull] OGParser.DclsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>noDeclarationsDefined</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoDeclarationsDefined([NotNull] OGParser.NoDeclarationsDefinedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>noDeclarationsDefined</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoDeclarationsDefined([NotNull] OGParser.NoDeclarationsDefinedContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>cmds</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCmds([NotNull] OGParser.CmdsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>cmds</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCmds([NotNull] OGParser.CmdsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>noCmdsDeclared</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoCmdsDeclared([NotNull] OGParser.NoCmdsDeclaredContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>noCmdsDeclared</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoCmdsDeclared([NotNull] OGParser.NoCmdsDeclaredContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberDcl([NotNull] OGParser.NumberDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberDcl([NotNull] OGParser.NumberDclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointDcl([NotNull] OGParser.PointDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointDcl([NotNull] OGParser.PointDclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolDcl([NotNull] OGParser.BoolDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolDcl([NotNull] OGParser.BoolDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.booleanDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanDeclaration([NotNull] OGParser.BooleanDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.booleanDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanDeclaration([NotNull] OGParser.BooleanDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberDeclaration([NotNull] OGParser.NumberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberDeclaration([NotNull] OGParser.NumberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDclPointRefAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointDclPointRefAssign([NotNull] OGParser.PointDclPointRefAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDclPointRefAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointDclPointRefAssign([NotNull] OGParser.PointDclPointRefAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDclIdAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointDclIdAssign([NotNull] OGParser.PointDclIdAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDclIdAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointDclIdAssign([NotNull] OGParser.PointDclIdAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.pointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointReference([NotNull] OGParser.PointReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.pointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointReference([NotNull] OGParser.PointReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberTuple([NotNull] OGParser.NumberTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberTuple([NotNull] OGParser.NumberTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] OGParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] OGParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyAssignment([NotNull] OGParser.PropertyAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyAssignment([NotNull] OGParser.PropertyAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>idAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdAssign([NotNull] OGParser.IdAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdAssign([NotNull] OGParser.IdAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallAssign([NotNull] OGParser.FunctionCallAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallAssign([NotNull] OGParser.FunctionCallAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolAssign([NotNull] OGParser.BoolAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolAssign([NotNull] OGParser.BoolAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberAssign([NotNull] OGParser.NumberAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberAssign([NotNull] OGParser.NumberAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointAssign([NotNull] OGParser.PointAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointAssign([NotNull] OGParser.PointAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.pointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointAssignment([NotNull] OGParser.PointAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.pointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointAssignment([NotNull] OGParser.PointAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.startPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartPointAssignment([NotNull] OGParser.StartPointAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.startPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartPointAssignment([NotNull] OGParser.StartPointAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.endPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndPointAssignment([NotNull] OGParser.EndPointAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.endPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndPointAssignment([NotNull] OGParser.EndPointAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] OGParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] OGParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixAdditionExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixAdditionExpr([NotNull] OGParser.InfixAdditionExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixAdditionExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixAdditionExpr([NotNull] OGParser.InfixAdditionExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleTermExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleTermExpr([NotNull] OGParser.SingleTermExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleTermExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleTermExpr([NotNull] OGParser.SingleTermExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixMultExpr</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixMultExpr([NotNull] OGParser.InfixMultExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixMultExpr</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixMultExpr([NotNull] OGParser.InfixMultExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleTermChild</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleTermChild([NotNull] OGParser.SingleTermChildContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleTermChild</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleTermChild([NotNull] OGParser.SingleTermChildContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>powerExpr</c>
	/// labeled alternative in <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPowerExpr([NotNull] OGParser.PowerExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>powerExpr</c>
	/// labeled alternative in <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPowerExpr([NotNull] OGParser.PowerExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleAtom</c>
	/// labeled alternative in <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleAtom([NotNull] OGParser.SingleAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleAtom</c>
	/// labeled alternative in <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleAtom([NotNull] OGParser.SingleAtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisMathExpr</c>
	/// labeled alternative in <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisMathExpr([NotNull] OGParser.ParenthesisMathExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisMathExpr</c>
	/// labeled alternative in <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisMathExpr([NotNull] OGParser.ParenthesisMathExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>atomfuncCall</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomfuncCall([NotNull] OGParser.AtomfuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>atomfuncCall</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomfuncCall([NotNull] OGParser.AtomfuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] OGParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] OGParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>atomXYValue</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomXYValue([NotNull] OGParser.AtomXYValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>atomXYValue</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomXYValue([NotNull] OGParser.AtomXYValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>atomId</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomId([NotNull] OGParser.AtomIdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>atomId</c>
	/// labeled alternative in <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomId([NotNull] OGParser.AtomIdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprID</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprID([NotNull] OGParser.BoolExprIDContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprID</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprID([NotNull] OGParser.BoolExprIDContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprBoolComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprBoolComp([NotNull] OGParser.BoolExprBoolCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprBoolComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprBoolComp([NotNull] OGParser.BoolExprBoolCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisBoolExpr</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisBoolExpr([NotNull] OGParser.ParenthesisBoolExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisBoolExpr</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisBoolExpr([NotNull] OGParser.ParenthesisBoolExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprMathComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprMathComp([NotNull] OGParser.BoolExprMathCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprMathComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprMathComp([NotNull] OGParser.BoolExprMathCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprNotPrefix</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprNotPrefix([NotNull] OGParser.BoolExprNotPrefixContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprNotPrefix</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprNotPrefix([NotNull] OGParser.BoolExprNotPrefixContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprTrueFalse</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprTrueFalse([NotNull] OGParser.BoolExprTrueFalseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprTrueFalse</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprTrueFalse([NotNull] OGParser.BoolExprTrueFalseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprFuncCall</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprFuncCall([NotNull] OGParser.BoolExprFuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprFuncCall</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprFuncCall([NotNull] OGParser.BoolExprFuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] OGParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] OGParser.CommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.movementCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMovementCommand([NotNull] OGParser.MovementCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.movementCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMovementCommand([NotNull] OGParser.MovementCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.lineCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineCommand([NotNull] OGParser.LineCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.lineCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineCommand([NotNull] OGParser.LineCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.toCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToCommands([NotNull] OGParser.ToCommandsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.toCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToCommands([NotNull] OGParser.ToCommandsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.curveCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCurveCommand([NotNull] OGParser.CurveCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.curveCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCurveCommand([NotNull] OGParser.CurveCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>toWithId</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToWithId([NotNull] OGParser.ToWithIdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>toWithId</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToWithId([NotNull] OGParser.ToWithIdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>toWithNumberTuple</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToWithNumberTuple([NotNull] OGParser.ToWithNumberTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>toWithNumberTuple</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToWithNumberTuple([NotNull] OGParser.ToWithNumberTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>toWithStartPointRef</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToWithStartPointRef([NotNull] OGParser.ToWithStartPointRefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>toWithStartPointRef</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToWithStartPointRef([NotNull] OGParser.ToWithStartPointRefContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>toWithEndPointRef</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToWithEndPointRef([NotNull] OGParser.ToWithEndPointRefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>toWithEndPointRef</c>
	/// labeled alternative in <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToWithEndPointRef([NotNull] OGParser.ToWithEndPointRefContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fromWithId</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromWithId([NotNull] OGParser.FromWithIdContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fromWithId</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromWithId([NotNull] OGParser.FromWithIdContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fromWithNumberTuple</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromWithNumberTuple([NotNull] OGParser.FromWithNumberTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fromWithNumberTuple</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromWithNumberTuple([NotNull] OGParser.FromWithNumberTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fromWithStartPointRef</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromWithStartPointRef([NotNull] OGParser.FromWithStartPointRefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fromWithStartPointRef</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromWithStartPointRef([NotNull] OGParser.FromWithStartPointRefContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fromWithEndPointRef</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromWithEndPointRef([NotNull] OGParser.FromWithEndPointRefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fromWithEndPointRef</c>
	/// labeled alternative in <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromWithEndPointRef([NotNull] OGParser.FromWithEndPointRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.iterationCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationCommand([NotNull] OGParser.IterationCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.iterationCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationCommand([NotNull] OGParser.IterationCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberIteration([NotNull] OGParser.NumberIterationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberIteration([NotNull] OGParser.NumberIterationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>untilFuncCall</c>
	/// labeled alternative in <see cref="OGParser.untilIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntilFuncCall([NotNull] OGParser.UntilFuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>untilFuncCall</c>
	/// labeled alternative in <see cref="OGParser.untilIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntilFuncCall([NotNull] OGParser.UntilFuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>untilCondition</c>
	/// labeled alternative in <see cref="OGParser.untilIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntilCondition([NotNull] OGParser.UntilConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>untilCondition</c>
	/// labeled alternative in <see cref="OGParser.untilIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntilCondition([NotNull] OGParser.UntilConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.functionDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDcl([NotNull] OGParser.FunctionDclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.functionDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDcl([NotNull] OGParser.FunctionDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.returnFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnFunctionDCL([NotNull] OGParser.ReturnFunctionDCLContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.returnFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnFunctionDCL([NotNull] OGParser.ReturnFunctionDCLContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.typeWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeWord([NotNull] OGParser.TypeWordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.typeWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeWord([NotNull] OGParser.TypeWordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.voidFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoidFunctionDCL([NotNull] OGParser.VoidFunctionDCLContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.voidFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoidFunctionDCL([NotNull] OGParser.VoidFunctionDCLContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiParamDcl</c>
	/// labeled alternative in <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiParamDcl([NotNull] OGParser.MultiParamDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiParamDcl</c>
	/// labeled alternative in <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiParamDcl([NotNull] OGParser.MultiParamDclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleParamDcl</c>
	/// labeled alternative in <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleParamDcl([NotNull] OGParser.SingleParamDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleParamDcl</c>
	/// labeled alternative in <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleParamDcl([NotNull] OGParser.SingleParamDclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>noParamsDcl</c>
	/// labeled alternative in <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoParamsDcl([NotNull] OGParser.NoParamsDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>noParamsDcl</c>
	/// labeled alternative in <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoParamsDcl([NotNull] OGParser.NoParamsDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.parameterDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterDcl([NotNull] OGParser.ParameterDclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.parameterDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterDcl([NotNull] OGParser.ParameterDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] OGParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] OGParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiParameters</c>
	/// labeled alternative in <see cref="OGParser.passedParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiParameters([NotNull] OGParser.MultiParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiParameters</c>
	/// labeled alternative in <see cref="OGParser.passedParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiParameters([NotNull] OGParser.MultiParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleParameter</c>
	/// labeled alternative in <see cref="OGParser.passedParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleParameter([NotNull] OGParser.SingleParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleParameter</c>
	/// labeled alternative in <see cref="OGParser.passedParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleParameter([NotNull] OGParser.SingleParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>noParameter</c>
	/// labeled alternative in <see cref="OGParser.passedParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoParameter([NotNull] OGParser.NoParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>noParameter</c>
	/// labeled alternative in <see cref="OGParser.passedParams"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoParameter([NotNull] OGParser.NoParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>passedID</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPassedID([NotNull] OGParser.PassedIDContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>passedID</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPassedID([NotNull] OGParser.PassedIDContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>passedFunctionCall</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPassedFunctionCall([NotNull] OGParser.PassedFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>passedFunctionCall</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPassedFunctionCall([NotNull] OGParser.PassedFunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>passedDirectValue</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPassedDirectValue([NotNull] OGParser.PassedDirectValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>passedDirectValue</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPassedDirectValue([NotNull] OGParser.PassedDirectValueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>passedEndPointReference</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPassedEndPointReference([NotNull] OGParser.PassedEndPointReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>passedEndPointReference</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPassedEndPointReference([NotNull] OGParser.PassedEndPointReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>passedStartPointReference</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPassedStartPointReference([NotNull] OGParser.PassedStartPointReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>passedStartPointReference</c>
	/// labeled alternative in <see cref="OGParser.passedParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPassedStartPointReference([NotNull] OGParser.PassedStartPointReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] OGParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] OGParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.startPointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartPointReference([NotNull] OGParser.StartPointReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.startPointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartPointReference([NotNull] OGParser.StartPointReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.endPointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndPointReference([NotNull] OGParser.EndPointReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.endPointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndPointReference([NotNull] OGParser.EndPointReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.coordinateXYValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCoordinateXYValue([NotNull] OGParser.CoordinateXYValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.coordinateXYValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCoordinateXYValue([NotNull] OGParser.CoordinateXYValueContext context);
}
