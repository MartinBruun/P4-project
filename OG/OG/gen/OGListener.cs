//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Rasmus/OneDrive/Aalborg University/4 Semester/Project/P4-project/OG/OG\OG.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="OGParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IOGListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>prog</c>
	/// labeled alternative in <see cref="OGParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] OGParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>prog</c>
	/// labeled alternative in <see cref="OGParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] OGParser.ProgContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>shapeDclsChildren</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShapeDclsChildren([NotNull] OGParser.ShapeDclsChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>shapeDclsChildren</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShapeDclsChildren([NotNull] OGParser.ShapeDclsChildrenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>shapeDclEmpty</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShapeDclEmpty([NotNull] OGParser.ShapeDclEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>shapeDclEmpty</c>
	/// labeled alternative in <see cref="OGParser.shapeDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShapeDclEmpty([NotNull] OGParser.ShapeDclEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallChildren</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallChildren([NotNull] OGParser.FunctionCallChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallChildren</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallChildren([NotNull] OGParser.FunctionCallChildrenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallEmpty</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallEmpty([NotNull] OGParser.FunctionCallEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallEmpty</c>
	/// labeled alternative in <see cref="OGParser.functionDcls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallEmpty([NotNull] OGParser.FunctionCallEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.machineVariables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMachineVariables([NotNull] OGParser.MachineVariablesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.machineVariables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMachineVariables([NotNull] OGParser.MachineVariablesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.machine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMachine([NotNull] OGParser.MachineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.machine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMachine([NotNull] OGParser.MachineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.draw"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDraw([NotNull] OGParser.DrawContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.draw"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDraw([NotNull] OGParser.DrawContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>drawCommandsChildren</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawCommandsChildren([NotNull] OGParser.DrawCommandsChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>drawCommandsChildren</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawCommandsChildren([NotNull] OGParser.DrawCommandsChildrenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>drawCommandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawCommandsEmpty([NotNull] OGParser.DrawCommandsEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>drawCommandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.drawCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawCommandsEmpty([NotNull] OGParser.DrawCommandsEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.shapeDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShapeDcl([NotNull] OGParser.ShapeDclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.shapeDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShapeDcl([NotNull] OGParser.ShapeDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBody([NotNull] OGParser.BodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBody([NotNull] OGParser.BodyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentsChildren</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentsChildren([NotNull] OGParser.AssignmentsChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentsChildren</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentsChildren([NotNull] OGParser.AssignmentsChildrenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignmentsEmpty</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentsEmpty([NotNull] OGParser.AssignmentsEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignmentsEmpty</c>
	/// labeled alternative in <see cref="OGParser.assignments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentsEmpty([NotNull] OGParser.AssignmentsEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declarationsChildren</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationsChildren([NotNull] OGParser.DeclarationsChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationsChildren</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationsChildren([NotNull] OGParser.DeclarationsChildrenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declarationsEmpty</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationsEmpty([NotNull] OGParser.DeclarationsEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declarationsEmpty</c>
	/// labeled alternative in <see cref="OGParser.declarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationsEmpty([NotNull] OGParser.DeclarationsEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>commandsChildren</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommandsChildren([NotNull] OGParser.CommandsChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>commandsChildren</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommandsChildren([NotNull] OGParser.CommandsChildrenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>commandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommandsEmpty([NotNull] OGParser.CommandsEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>commandsEmpty</c>
	/// labeled alternative in <see cref="OGParser.commands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommandsEmpty([NotNull] OGParser.CommandsEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberDcl([NotNull] OGParser.NumberDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberDcl([NotNull] OGParser.NumberDclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointDcl([NotNull] OGParser.PointDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointDcl([NotNull] OGParser.PointDclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolDcl([NotNull] OGParser.BoolDclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolDcl</c>
	/// labeled alternative in <see cref="OGParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolDcl([NotNull] OGParser.BoolDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.booleanDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanDeclaration([NotNull] OGParser.BooleanDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.booleanDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanDeclaration([NotNull] OGParser.BooleanDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberDeclaration([NotNull] OGParser.NumberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberDeclaration([NotNull] OGParser.NumberDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDclPointRefAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointDclPointRefAssign([NotNull] OGParser.PointDclPointRefAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDclPointRefAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointDclPointRefAssign([NotNull] OGParser.PointDclPointRefAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointDclIdAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointDclIdAssign([NotNull] OGParser.PointDclIdAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointDclIdAssign</c>
	/// labeled alternative in <see cref="OGParser.pointDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointDclIdAssign([NotNull] OGParser.PointDclIdAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.pointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointReference([NotNull] OGParser.PointReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.pointReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointReference([NotNull] OGParser.PointReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberTuple([NotNull] OGParser.NumberTupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberTuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberTuple([NotNull] OGParser.NumberTupleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] OGParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] OGParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyAssignment([NotNull] OGParser.PropertyAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.propertyAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyAssignment([NotNull] OGParser.PropertyAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>idAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdAssign([NotNull] OGParser.IdAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdAssign([NotNull] OGParser.IdAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolAssign([NotNull] OGParser.BoolAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolAssign([NotNull] OGParser.BoolAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberAssign([NotNull] OGParser.NumberAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberAssign([NotNull] OGParser.NumberAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>pointAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointAssign([NotNull] OGParser.PointAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>pointAssign</c>
	/// labeled alternative in <see cref="OGParser.variableAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointAssign([NotNull] OGParser.PointAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.pointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPointAssignment([NotNull] OGParser.PointAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.pointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPointAssignment([NotNull] OGParser.PointAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.startPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartPointAssignment([NotNull] OGParser.StartPointAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.startPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartPointAssignment([NotNull] OGParser.StartPointAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.endPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndPointAssignment([NotNull] OGParser.EndPointAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.endPointAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndPointAssignment([NotNull] OGParser.EndPointAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] OGParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] OGParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixAdditionExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixAdditionExpr([NotNull] OGParser.InfixAdditionExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixAdditionExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixAdditionExpr([NotNull] OGParser.InfixAdditionExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleTermExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleTermExpr([NotNull] OGParser.SingleTermExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleTermExpr</c>
	/// labeled alternative in <see cref="OGParser.mathExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleTermExpr([NotNull] OGParser.SingleTermExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>infixMultExpr</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInfixMultExpr([NotNull] OGParser.InfixMultExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>infixMultExpr</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInfixMultExpr([NotNull] OGParser.InfixMultExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>singleTermChild</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleTermChild([NotNull] OGParser.SingleTermChildContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>singleTermChild</c>
	/// labeled alternative in <see cref="OGParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleTermChild([NotNull] OGParser.SingleTermChildContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] OGParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] OGParser.FactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] OGParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] OGParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprID</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprID([NotNull] OGParser.BoolExprIDContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprID</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprID([NotNull] OGParser.BoolExprIDContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprBoolComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprBoolComp([NotNull] OGParser.BoolExprBoolCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprBoolComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprBoolComp([NotNull] OGParser.BoolExprBoolCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprMathComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprMathComp([NotNull] OGParser.BoolExprMathCompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprMathComp</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprMathComp([NotNull] OGParser.BoolExprMathCompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprNotPrefix</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprNotPrefix([NotNull] OGParser.BoolExprNotPrefixContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprNotPrefix</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprNotPrefix([NotNull] OGParser.BoolExprNotPrefixContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprTrueFalse</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprTrueFalse([NotNull] OGParser.BoolExprTrueFalseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprTrueFalse</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprTrueFalse([NotNull] OGParser.BoolExprTrueFalseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExprFuncCall</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExprFuncCall([NotNull] OGParser.BoolExprFuncCallContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExprFuncCall</c>
	/// labeled alternative in <see cref="OGParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExprFuncCall([NotNull] OGParser.BoolExprFuncCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] OGParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] OGParser.CommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.movementCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMovementCommand([NotNull] OGParser.MovementCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.movementCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMovementCommand([NotNull] OGParser.MovementCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.lineCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineCommand([NotNull] OGParser.LineCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.lineCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineCommand([NotNull] OGParser.LineCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.curveCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCurveCommand([NotNull] OGParser.CurveCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.curveCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCurveCommand([NotNull] OGParser.CurveCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToCommand([NotNull] OGParser.ToCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.toCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToCommand([NotNull] OGParser.ToCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.drawCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDrawCommand([NotNull] OGParser.DrawCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.drawCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDrawCommand([NotNull] OGParser.DrawCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromCommand([NotNull] OGParser.FromCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.fromCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromCommand([NotNull] OGParser.FromCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.iterationCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterationCommand([NotNull] OGParser.IterationCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.iterationCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterationCommand([NotNull] OGParser.IterationCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.numberIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberIteration([NotNull] OGParser.NumberIterationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.numberIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberIteration([NotNull] OGParser.NumberIterationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.untilIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntilIteration([NotNull] OGParser.UntilIterationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.untilIteration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntilIteration([NotNull] OGParser.UntilIterationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.functionDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDcl([NotNull] OGParser.FunctionDclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.functionDcl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDcl([NotNull] OGParser.FunctionDclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.returnFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnFunctionDCL([NotNull] OGParser.ReturnFunctionDCLContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.returnFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnFunctionDCL([NotNull] OGParser.ReturnFunctionDCLContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.typeWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeWord([NotNull] OGParser.TypeWordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.typeWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeWord([NotNull] OGParser.TypeWordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.voidFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVoidFunctionDCL([NotNull] OGParser.VoidFunctionDCLContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.voidFunctionDCL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVoidFunctionDCL([NotNull] OGParser.VoidFunctionDCLContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterDeclarations([NotNull] OGParser.ParameterDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.parameterDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterDeclarations([NotNull] OGParser.ParameterDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameters([NotNull] OGParser.ParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameters([NotNull] OGParser.ParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] OGParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] OGParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] OGParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] OGParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OGParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] OGParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OGParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] OGParser.ReturnStatementContext context);
}
