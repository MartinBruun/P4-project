/*Machine.WorkArea.size(xmin=-10,xmax=10,ymin=-10,ymax=10);

draw {
    S;
}

function number AA(number NN){
return 2 * NN;
}

shape S{
    number xOffset = 0;
    number sideVal = 0;
    number b = 0
    repeat(10)
        b = AA(sideVal+2);
        sideVal = sideVal+1;
        xOffset = AA(sideVal); 
        
    repeat.end;
    
}*/

Machine.WorkArea.size(xmin=-10,xmax=10,ymin=-10,ymax=10);

draw {
    Diamond;
    Heart;
    Spade;
    Club;
}

function point getMiddlePoint(number px1, number py1, number px2, number py2){
    
   /* Should be implemented like this.*/
        number x = (px1+px2)/2;
        number y = (py1+py2)/2;
        point p = (x,y);
        return p;
   
}
function number getMiddlePointForCoordinate(number px1,number px2){
number x = (px1+px2)/2;
return x;
}

function number buttomOfStand(number y){
   return y;
}

shape Diamond {
    point start = (-5,-7);
    line.from(start).to(-4,-5).to(-5,-3).to(-6,-5).to(start);
}

shape ClubStand {
    point start = (5,3);
    
    curve.withAngle(20).from(start).to(6,2);
    line.from(6,2).to(4,2);
    curve.withAngle(20).from(4,2).to(start);
}

shape Club {
    point start = (5,3);

    ClubStand;
    curve.withAngle(90).from(start).to(6,5).to(4,5).to(start);
}

shape Heart {
    point start = (-5, 7);
    number rightEdgeX = -3;
    number rightEdgeY = 7;
    point rightEdge = (rightEdgeX,rightEdgeY);
    
    point leftEdge = (-7,7);
    
    number bottomPointX = -5;
    number bottomPointY = 4;
    point bottomPoint = (bottomPointX,bottomPointY);
    
    point rightMiddleLine = getMiddlePoint(rightEdgeX, rightEdgeY, bottomPointX, bottomPointY);/*(-4,5.5);*/
    point leftMiddleLine = (-6,5.5);/*getMiddlePoint(leftEdge, bottomPoint);*/

    curve.withAngle(-90).from(start).to(rightEdge);
    curve.withAngle(-45).from(rightEdge).to(rightMiddleLine);
    curve.withAngle(45).from(rightMiddleLine).to(bottomPoint).to(leftMiddleLine);
    curve.withAngle(-45).from(leftMiddleLine).to(leftEdge);
    curve.withAngle(-90).from(leftEdge).to(start);
}

shape SpadeStand {
    point start = (5,-7);
    number buttomY = -9;
    
    curve.withAngle(20).from(start).to(6,buttomY);
    line.from(6,buttomY).to(4,buttomY);
    curve.withAngle(20).from(4,buttomY).to(start);
}

shape Spade {
    
    number xMiddle = 5;
    point start = (xMiddle, -7);
    
    number topX = xMiddle;
    number topY = -3;
    point top = (topX,topY);
    
    number edgeX = 0
    number edgeY = -7;
    point edge = (edgeX,edgeY);
    
    number middleLineX = 0;
    number middleLineY = 0;
    point middleLine = (middleLineX,middleLineY);
    number sideVal = 1;
    number xOffset = -2;

    SpadeStand;
    repeat(2)
        edge = (edgeX, edgeY);
        middleLineX = (xMiddle + (xOffset * sideVal)/2;/*getMiddlePointForCoordinate(edgeX,topX);*/
        middleLineY = -5;
        middleLine = (middleLineX,middleLineY);/* (xMiddle + ((xOffset * sideVal)/2), -5); /*getMiddlePoint(edgeX,edgeY,topX,topY);*/

        curve.withAngle(sideVal * -90).from(start).to(edge);
        curve.withAngle(sideVal * -45).from(edge).to(middleLine);
        curve.withAngle(sideVal * 45).from(middleLine).to(top);
        sideVal = -1;
        
    repeat.end;
}